{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/items/": {"get": {"summary": "Read Items", "operationId": "read_items_items__get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "q", "in": "query", "required": false, "schema": {"type": "string", "default": "", "title": "Q"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ItemBase"}, "title": "Response Read Items Items  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"summary": "Create Item", "description": "Insert a new item and publish it through the WebSocket.", "operationId": "create_item_items__post", "security": [{"HTTPBasic": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScanDataCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemBase"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/items/{item_id}": {"get": {"summary": "Read Item", "operationId": "read_item_items__item_id__get", "parameters": [{"name": "item_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Item Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemBase"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/TimeStampTokens/": {"post": {"summary": "Create Tst", "description": "Insert a TimeStampToken and publish it through the WebSocket.", "operationId": "create_tst_TimeStampTokens__post", "security": [{"HTTPBasic": []}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "get": {"summary": "Read Tsts", "operationId": "read_tsts_TimeStampTokens__get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/TimeStampTokens/{scan_uuid}": {"get": {"summary": "Get Tst", "description": "Returns a TimeStampToken object corresponding to the scan UUID given as parameter.", "operationId": "get_tst_TimeStampTokens__scan_uuid__get", "parameters": [{"name": "scan_uuid", "in": "path", "required": true, "schema": {"title": "Scan Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "format": "binary", "title": "Response Get Tst Timestamptokens  Scan Uuid  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/TimeStampTokens/token/{scan_uuid}": {"get": {"summary": "Get Tst Token", "description": "Returns directly the TST as a raw binary stream corresponding to the scan UUID given as parameter.", "operationId": "get_tst_token_TimeStampTokens_token__scan_uuid__get", "parameters": [{"name": "scan_uuid", "in": "path", "required": true, "schema": {"title": "Scan Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "format": "binary", "title": "Response Get Tst Token Timestamptokens Token  Scan Uuid  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/TimeStampTokens/check/{scan_uuid}": {"get": {"summary": "Check Tst", "description": "Performs an offline check of a TimeStampToken.", "operationId": "check_tst_TimeStampTokens_check__scan_uuid__get", "parameters": [{"name": "scan_uuid", "in": "path", "required": true, "schema": {"title": "Scan Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/TimeStampTokens/get_timestamp/{scan_uuid}": {"get": {"summary": "Get Timestamp", "description": "Get the timestamp of a check based on the corresponding TimeStampToken object.", "operationId": "get_timestamp_TimeStampTokens_get_timestamp__scan_uuid__get", "parameters": [{"name": "scan_uuid", "in": "path", "required": true, "schema": {"title": "Scan Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/system/stats/": {"get": {"summary": "Stats", "description": "Provides stats about the database.", "operationId": "stats_system_stats__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/system/info/": {"get": {"summary": "System Info", "description": "Provides information about the instance.", "operationId": "system_info_system_info__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ItemBase": {"properties": {"scan_data": {"$ref": "#/components/schemas/ScanData"}}, "type": "object", "required": ["scan_data"], "title": "ItemBase"}, "Meta": {"properties": {"uuid": {"type": "string", "title": "Uuid"}, "ts": {"type": "integer", "title": "Ts"}, "type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["uuid", "ts", "type"], "title": "Meta"}, "Payload": {"properties": {"raw": {"type": "string", "title": "Raw"}}, "type": "object", "required": ["raw"], "title": "Payload"}, "ScanData": {"properties": {"version": {"type": "string", "title": "Version"}, "format": {"type": "string", "title": "Format"}, "meta": {"$ref": "#/components/schemas/Meta"}, "payload": {"$ref": "#/components/schemas/Payload"}}, "type": "object", "required": ["version", "format", "meta", "payload"], "title": "ScanData"}, "ScanDataCreate": {"properties": {"version": {"type": "string", "title": "Version"}, "format": {"type": "string", "title": "Format"}, "meta": {"$ref": "#/components/schemas/Meta"}, "payload": {"$ref": "#/components/schemas/Payload"}}, "type": "object", "required": ["version", "format", "meta", "payload"], "title": "ScanDataCreate"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"HTTPBasic": {"type": "http", "scheme": "basic"}}}}
